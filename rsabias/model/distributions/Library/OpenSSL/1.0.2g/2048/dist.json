{
    "type": "multi_dim_distribution",
    "name": "Combine([MostSignificantBits({p},5,0,True),MostSignificantBits({q},5,0,True),All([Equal([LeastSignificantBits({p},1,1),Constant(1)]),Equal([LeastSignificantBits({q},1,1),Constant(1)])]),Min([ModularFingerprintSpecial({p}),ModularFingerprintSpecial({q})]),ROCAFingerprint({n},True)])",
    "counts": {
        "(29, 27, False, 17863, False)": 2383,
        "(31, 30, False, 17863, False)": 2310,
        "(27, 27, False, 17863, False)": 1123,
        "(25, 25, True, 17863, False)": 390,
        "(27, 25, False, 17863, False)": 2294,
        "(30, 25, True, 17863, False)": 751,
        "(24, 24, False, 17863, False)": 1132,
        "(26, 26, False, 17863, False)": 1209,
        "(31, 29, True, 17863, False)": 784,
        "(26, 25, False, 17863, False)": 2393,
        "(30, 24, False, 17863, False)": 2380,
        "(29, 29, True, 17863, False)": 421,
        "(31, 29, False, 17863, False)": 2395,
        "(28, 25, False, 17863, False)": 2333,
        "(30, 27, True, 17863, False)": 818,
        "(31, 25, False, 17863, False)": 2288,
        "(29, 24, False, 17863, False)": 2335,
        "(25, 24, False, 17863, False)": 2301,
        "(31, 30, True, 17863, False)": 747,
        "(31, 28, False, 17863, False)": 2353,
        "(31, 24, False, 17863, False)": 2335,
        "(30, 24, True, 17863, False)": 792,
        "(28, 27, False, 17863, False)": 2363,
        "(27, 26, False, 17863, False)": 2387,
        "(27, 26, True, 17863, False)": 778,
        "(30, 29, False, 17863, False)": 2393,
        "(26, 24, False, 17863, False)": 2289,
        "(27, 24, False, 17863, False)": 2227,
        "(25, 25, False, 17863, False)": 1193,
        "(29, 24, True, 17863, False)": 771,
        "(29, 25, False, 17863, False)": 2361,
        "(31, 26, True, 17863, False)": 740,
        "(30, 25, False, 17863, False)": 2351,
        "(26, 25, True, 17863, False)": 794,
        "(31, 28, True, 17863, False)": 816,
        "(31, 27, False, 17863, False)": 2346,
        "(28, 28, False, 17863, False)": 1148,
        "(28, 24, False, 17863, False)": 2358,
        "(30, 27, False, 17863, False)": 2393,
        "(31, 24, True, 17863, False)": 783,
        "(30, 30, False, 17863, False)": 1206,
        "(31, 26, False, 17863, False)": 2370,
        "(29, 28, True, 17863, False)": 780,
        "(27, 25, True, 17863, False)": 774,
        "(30, 29, True, 17863, False)": 808,
        "(30, 26, True, 17863, False)": 786,
        "(28, 27, True, 17863, False)": 778,
        "(29, 29, False, 17863, False)": 1189,
        "(28, 26, False, 17863, False)": 2299,
        "(29, 28, False, 17863, False)": 2291,
        "(26, 24, True, 17863, False)": 791,
        "(28, 26, True, 17863, False)": 745,
        "(27, 24, True, 17863, False)": 769,
        "(25, 24, True, 17863, False)": 747,
        "(28, 24, True, 17863, False)": 779,
        "(27, 27, True, 17863, False)": 401,
        "(29, 25, True, 17863, False)": 795,
        "(26, 26, True, 17863, False)": 407,
        "(29, 27, True, 17863, False)": 748,
        "(29, 26, True, 17863, False)": 775,
        "(30, 28, False, 17863, False)": 2347,
        "(30, 26, False, 17863, False)": 2406,
        "(24, 24, True, 17863, False)": 361,
        "(31, 27, True, 17863, False)": 765,
        "(28, 28, True, 17863, False)": 421,
        "(28, 25, True, 17863, False)": 757,
        "(31, 31, False, 17863, False)": 1249,
        "(30, 30, True, 17863, False)": 379,
        "(29, 26, False, 17863, False)": 2252,
        "(30, 28, True, 17863, False)": 846,
        "(31, 31, True, 17863, False)": 396,
        "(31, 25, True, 17863, False)": 825
    },
    "eval": "all"
}