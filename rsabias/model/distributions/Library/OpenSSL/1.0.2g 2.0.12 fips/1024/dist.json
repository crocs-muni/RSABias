{
    "type": "multi_dim_distribution",
    "name": "Combine([MostSignificantBits({p},5,0,True),MostSignificantBits({q},5,0,True),All([Equal([LeastSignificantBits({p},1,1),Constant(1)]),Equal([LeastSignificantBits({q},1,1),Constant(1)])]),Min([ModularFingerprintSpecial({p}),ModularFingerprintSpecial({q})]),ROCAFingerprint({n},True)])",
    "counts": {
        "(28, 26, False, 17863, False)": 25703,
        "(29, 28, False, 17863, False)": 25642,
        "(29, 29, False, 17863, False)": 12733,
        "(27, 26, True, 17863, False)": 8420,
        "(31, 25, False, 17863, False)": 25398,
        "(31, 24, True, 17863, False)": 8547,
        "(30, 30, False, 17863, False)": 12678,
        "(28, 25, False, 17863, False)": 25586,
        "(30, 29, False, 17863, False)": 25600,
        "(31, 31, False, 17863, False)": 12724,
        "(26, 24, False, 17863, False)": 25580,
        "(29, 24, False, 17863, False)": 25549,
        "(26, 26, False, 17863, False)": 12610,
        "(31, 27, False, 17863, False)": 25358,
        "(31, 28, False, 17863, False)": 25347,
        "(27, 26, False, 17863, False)": 25578,
        "(28, 28, False, 17863, False)": 12782,
        "(30, 26, False, 17863, False)": 25520,
        "(30, 26, True, 17863, False)": 8500,
        "(26, 25, False, 17863, False)": 25567,
        "(27, 24, False, 17863, False)": 25647,
        "(30, 27, False, 17863, False)": 25508,
        "(30, 24, True, 17863, False)": 8280,
        "(29, 27, True, 17863, False)": 8516,
        "(24, 24, False, 17863, False)": 12739,
        "(29, 26, True, 17863, False)": 8531,
        "(28, 27, False, 17863, False)": 25631,
        "(30, 25, False, 17863, False)": 25504,
        "(27, 24, True, 17863, False)": 8364,
        "(31, 27, True, 17863, False)": 8441,
        "(30, 27, True, 17863, False)": 8622,
        "(25, 24, True, 17863, False)": 8585,
        "(28, 24, True, 17863, False)": 8621,
        "(29, 26, False, 17863, False)": 25621,
        "(25, 25, False, 17863, False)": 12898,
        "(30, 28, False, 17863, False)": 25585,
        "(31, 26, False, 17863, False)": 25721,
        "(26, 26, True, 17863, False)": 4194,
        "(28, 24, False, 17863, False)": 25656,
        "(29, 27, False, 17863, False)": 25548,
        "(31, 24, False, 17863, False)": 25642,
        "(25, 24, False, 17863, False)": 25435,
        "(30, 28, True, 17863, False)": 8448,
        "(30, 24, False, 17863, False)": 25490,
        "(29, 25, False, 17863, False)": 25650,
        "(31, 29, False, 17863, False)": 25698,
        "(27, 25, True, 17863, False)": 8584,
        "(27, 25, False, 17863, False)": 25590,
        "(24, 24, True, 17863, False)": 4265,
        "(28, 27, True, 17863, False)": 8622,
        "(31, 30, False, 17863, False)": 25652,
        "(27, 27, False, 17863, False)": 12474,
        "(29, 29, True, 17863, False)": 4323,
        "(28, 25, True, 17863, False)": 8460,
        "(30, 25, True, 17863, False)": 8499,
        "(29, 28, True, 17863, False)": 8474,
        "(28, 26, True, 17863, False)": 8473,
        "(31, 25, True, 17863, False)": 8409,
        "(29, 24, True, 17863, False)": 8469,
        "(26, 25, True, 17863, False)": 8502,
        "(25, 25, True, 17863, False)": 4267,
        "(31, 29, True, 17863, False)": 8422,
        "(28, 28, True, 17863, False)": 4241,
        "(30, 29, True, 17863, False)": 8666,
        "(31, 26, True, 17863, False)": 8620,
        "(30, 30, True, 17863, False)": 4177,
        "(29, 25, True, 17863, False)": 8588,
        "(26, 24, True, 17863, False)": 8635,
        "(31, 31, True, 17863, False)": 4218,
        "(31, 28, True, 17863, False)": 8563,
        "(27, 27, True, 17863, False)": 4320,
        "(31, 30, True, 17863, False)": 8490
    },
    "eval": "all"
}