{
    "type": "multi_dim_distribution",
    "name": "Combine([MostSignificantBits({p},5,0,True),MostSignificantBits({q},5,0,True),All([Equal([LeastSignificantBits({p},1,1),Constant(1)]),Equal([LeastSignificantBits({q},1,1),Constant(1)])]),Min([ModularFingerprintSpecial({p}),ModularFingerprintSpecial({q})]),ROCAFingerprint({n},True)])",
    "counts": {
        "(28, 25, False, 17863, False)": 2390,
        "(26, 26, True, 17863, False)": 391,
        "(28, 26, False, 17863, False)": 2395,
        "(31, 29, True, 17863, False)": 834,
        "(28, 27, True, 17863, False)": 767,
        "(27, 24, False, 17863, False)": 2391,
        "(27, 25, False, 17863, False)": 2296,
        "(29, 24, False, 17863, False)": 2383,
        "(30, 26, False, 17863, False)": 2393,
        "(29, 29, False, 17863, False)": 1150,
        "(29, 27, False, 17863, False)": 2374,
        "(28, 25, True, 17863, False)": 767,
        "(29, 28, True, 17863, False)": 818,
        "(31, 25, False, 17863, False)": 2281,
        "(31, 28, False, 17863, False)": 2340,
        "(30, 29, False, 17863, False)": 2344,
        "(30, 25, False, 17863, False)": 2336,
        "(27, 26, False, 17863, False)": 2471,
        "(28, 26, True, 17863, False)": 769,
        "(31, 29, False, 17863, False)": 2342,
        "(31, 30, False, 17863, False)": 2388,
        "(28, 27, False, 17863, False)": 2350,
        "(30, 28, True, 17863, False)": 777,
        "(31, 27, False, 17863, False)": 2369,
        "(30, 28, False, 17863, False)": 2281,
        "(30, 24, False, 17863, False)": 2398,
        "(31, 26, False, 17863, False)": 2340,
        "(29, 27, True, 17863, False)": 805,
        "(26, 24, False, 17863, False)": 2352,
        "(29, 26, False, 17863, False)": 2355,
        "(29, 25, True, 17863, False)": 781,
        "(31, 30, True, 17863, False)": 786,
        "(31, 24, True, 17863, False)": 763,
        "(30, 27, True, 17863, False)": 762,
        "(26, 25, False, 17863, False)": 2270,
        "(31, 28, True, 17863, False)": 741,
        "(31, 24, False, 17863, False)": 2354,
        "(30, 29, True, 17863, False)": 760,
        "(30, 27, False, 17863, False)": 2261,
        "(31, 26, True, 17863, False)": 807,
        "(25, 24, True, 17863, False)": 779,
        "(24, 24, False, 17863, False)": 1144,
        "(28, 24, True, 17863, False)": 739,
        "(29, 28, False, 17863, False)": 2407,
        "(27, 24, True, 17863, False)": 828,
        "(26, 25, True, 17863, False)": 759,
        "(29, 25, False, 17863, False)": 2324,
        "(26, 26, False, 17863, False)": 1149,
        "(30, 25, True, 17863, False)": 736,
        "(28, 28, True, 17863, False)": 372,
        "(27, 26, True, 17863, False)": 806,
        "(28, 28, False, 17863, False)": 1129,
        "(28, 24, False, 17863, False)": 2348,
        "(31, 31, False, 17863, False)": 1135,
        "(25, 25, False, 17863, False)": 1194,
        "(29, 24, True, 17863, False)": 781,
        "(30, 30, False, 17863, False)": 1132,
        "(30, 24, True, 17863, False)": 812,
        "(25, 24, False, 17863, False)": 2348,
        "(27, 27, False, 17863, False)": 1153,
        "(31, 27, True, 17863, False)": 810,
        "(31, 25, True, 17863, False)": 791,
        "(27, 27, True, 17863, False)": 391,
        "(27, 25, True, 17863, False)": 754,
        "(26, 24, True, 17863, False)": 792,
        "(29, 29, True, 17863, False)": 396,
        "(30, 30, True, 17863, False)": 423,
        "(31, 31, True, 17863, False)": 394,
        "(30, 26, True, 17863, False)": 764,
        "(25, 25, True, 17863, False)": 363,
        "(24, 24, True, 17863, False)": 368,
        "(29, 26, True, 17863, False)": 747
    },
    "eval": "all"
}