{
    "type": "multi_dim_distribution",
    "name": "Combine([MostSignificantBits({p},5,0,True),MostSignificantBits({q},5,0,True),All([Equal([LeastSignificantBits({p},1,1),Constant(1)]),Equal([LeastSignificantBits({q},1,1),Constant(1)])]),Min([ModularFingerprintSpecial({p}),ModularFingerprintSpecial({q})]),ROCAFingerprint({n},True)])",
    "counts": {
        "(29, 28, True, 17863, False)": 790,
        "(30, 27, False, 17863, False)": 2323,
        "(29, 26, False, 17863, False)": 2301,
        "(25, 24, False, 17863, False)": 2309,
        "(30, 24, False, 17863, False)": 2387,
        "(31, 24, True, 17863, False)": 814,
        "(29, 28, False, 17863, False)": 2301,
        "(28, 27, False, 17863, False)": 2370,
        "(29, 27, True, 17863, False)": 791,
        "(31, 25, False, 17863, False)": 2358,
        "(31, 29, False, 17863, False)": 2337,
        "(31, 27, False, 17863, False)": 2305,
        "(30, 25, False, 17863, False)": 2349,
        "(29, 26, True, 17863, False)": 781,
        "(30, 29, False, 17863, False)": 2343,
        "(30, 30, False, 17863, False)": 1244,
        "(29, 25, False, 17863, False)": 2373,
        "(28, 25, False, 17863, False)": 2268,
        "(29, 27, False, 17863, False)": 2383,
        "(31, 28, True, 17863, False)": 747,
        "(30, 24, True, 17863, False)": 788,
        "(31, 26, False, 17863, False)": 2310,
        "(29, 24, False, 17863, False)": 2348,
        "(30, 28, False, 17863, False)": 2338,
        "(30, 26, True, 17863, False)": 747,
        "(26, 24, False, 17863, False)": 2401,
        "(28, 26, False, 17863, False)": 2285,
        "(27, 25, False, 17863, False)": 2355,
        "(30, 26, False, 17863, False)": 2313,
        "(28, 24, False, 17863, False)": 2314,
        "(31, 24, False, 17863, False)": 2300,
        "(25, 25, False, 17863, False)": 1168,
        "(28, 25, True, 17863, False)": 776,
        "(31, 30, True, 17863, False)": 792,
        "(29, 24, True, 17863, False)": 769,
        "(24, 24, False, 17863, False)": 1185,
        "(31, 27, True, 17863, False)": 804,
        "(30, 29, True, 17863, False)": 760,
        "(26, 24, True, 17863, False)": 794,
        "(29, 29, False, 17863, False)": 1205,
        "(27, 25, True, 17863, False)": 777,
        "(26, 25, False, 17863, False)": 2293,
        "(27, 26, False, 17863, False)": 2333,
        "(31, 30, False, 17863, False)": 2343,
        "(27, 24, True, 17863, False)": 785,
        "(28, 26, True, 17863, False)": 822,
        "(26, 25, True, 17863, False)": 795,
        "(28, 27, True, 17863, False)": 759,
        "(31, 28, False, 17863, False)": 2368,
        "(26, 26, False, 17863, False)": 1147,
        "(27, 27, True, 17863, False)": 421,
        "(30, 27, True, 17863, False)": 770,
        "(28, 28, False, 17863, False)": 1150,
        "(27, 24, False, 17863, False)": 2313,
        "(31, 25, True, 17863, False)": 754,
        "(30, 25, True, 17863, False)": 812,
        "(27, 26, True, 17863, False)": 757,
        "(25, 24, True, 17863, False)": 793,
        "(27, 27, False, 17863, False)": 1245,
        "(28, 24, True, 17863, False)": 742,
        "(31, 26, True, 17863, False)": 785,
        "(30, 28, True, 17863, False)": 775,
        "(31, 29, True, 17863, False)": 792,
        "(31, 31, False, 17863, False)": 1288,
        "(28, 28, True, 17863, False)": 387,
        "(31, 31, True, 17863, False)": 396,
        "(29, 25, True, 17863, False)": 766,
        "(30, 30, True, 17863, False)": 395,
        "(26, 26, True, 17863, False)": 393,
        "(29, 29, True, 17863, False)": 397,
        "(24, 24, True, 17863, False)": 405,
        "(25, 25, True, 17863, False)": 416
    },
    "eval": "all"
}