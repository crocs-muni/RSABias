{
    "type": "multi_dim_distribution",
    "name": "Combine([MostSignificantBits({p},5,0,True),MostSignificantBits({q},5,0,True),All([Equal([LeastSignificantBits({p},1,1),Constant(1)]),Equal([LeastSignificantBits({q},1,1),Constant(1)])]),Min([ModularFingerprintSpecial({p}),ModularFingerprintSpecial({q})]),ROCAFingerprint({n},True)])",
    "counts": {
        "(25, 24, False, 17863, False)": 2396,
        "(30, 25, True, 17863, False)": 731,
        "(31, 29, False, 17863, False)": 2414,
        "(27, 24, True, 17863, False)": 776,
        "(28, 26, True, 17863, False)": 848,
        "(31, 26, False, 17863, False)": 2354,
        "(30, 28, False, 17863, False)": 2290,
        "(26, 24, True, 17863, False)": 790,
        "(31, 27, True, 17863, False)": 782,
        "(30, 29, False, 17863, False)": 2364,
        "(31, 27, False, 17863, False)": 2267,
        "(29, 25, False, 17863, False)": 2425,
        "(29, 26, True, 17863, False)": 798,
        "(28, 28, False, 17863, False)": 1152,
        "(30, 24, True, 17863, False)": 796,
        "(30, 29, True, 17863, False)": 788,
        "(26, 25, True, 17863, False)": 798,
        "(31, 25, False, 17863, False)": 2397,
        "(27, 24, False, 17863, False)": 2415,
        "(30, 27, True, 17863, False)": 771,
        "(27, 26, False, 17863, False)": 2296,
        "(29, 28, False, 17863, False)": 2352,
        "(30, 28, True, 17863, False)": 749,
        "(30, 26, False, 17863, False)": 2340,
        "(31, 30, False, 17863, False)": 2245,
        "(27, 25, False, 17863, False)": 2420,
        "(24, 24, False, 17863, False)": 1136,
        "(28, 25, False, 17863, False)": 2320,
        "(28, 26, False, 17863, False)": 2431,
        "(29, 24, False, 17863, False)": 2291,
        "(28, 24, False, 17863, False)": 2327,
        "(30, 26, True, 17863, False)": 781,
        "(29, 27, False, 17863, False)": 2394,
        "(28, 27, False, 17863, False)": 2387,
        "(26, 24, False, 17863, False)": 2334,
        "(29, 29, True, 17863, False)": 397,
        "(26, 26, False, 17863, False)": 1174,
        "(31, 24, False, 17863, False)": 2410,
        "(31, 31, False, 17863, False)": 1186,
        "(31, 30, True, 17863, False)": 756,
        "(29, 26, False, 17863, False)": 2360,
        "(30, 27, False, 17863, False)": 2423,
        "(29, 29, False, 17863, False)": 1159,
        "(29, 27, True, 17863, False)": 761,
        "(29, 28, True, 17863, False)": 768,
        "(27, 27, False, 17863, False)": 1180,
        "(28, 24, True, 17863, False)": 751,
        "(31, 29, True, 17863, False)": 789,
        "(30, 30, False, 17863, False)": 1159,
        "(30, 24, False, 17863, False)": 2208,
        "(27, 25, True, 17863, False)": 742,
        "(31, 28, False, 17863, False)": 2434,
        "(25, 24, True, 17863, False)": 801,
        "(30, 25, False, 17863, False)": 2328,
        "(25, 25, True, 17863, False)": 374,
        "(28, 25, True, 17863, False)": 757,
        "(31, 28, True, 17863, False)": 816,
        "(29, 24, True, 17863, False)": 791,
        "(27, 26, True, 17863, False)": 781,
        "(26, 25, False, 17863, False)": 2344,
        "(31, 24, True, 17863, False)": 774,
        "(27, 27, True, 17863, False)": 399,
        "(28, 28, True, 17863, False)": 395,
        "(26, 26, True, 17863, False)": 338,
        "(28, 27, True, 17863, False)": 726,
        "(25, 25, False, 17863, False)": 1145,
        "(31, 31, True, 17863, False)": 379,
        "(31, 26, True, 17863, False)": 769,
        "(31, 25, True, 17863, False)": 746,
        "(30, 30, True, 17863, False)": 363,
        "(24, 24, True, 17863, False)": 395,
        "(29, 25, True, 17863, False)": 767
    },
    "eval": "all"
}