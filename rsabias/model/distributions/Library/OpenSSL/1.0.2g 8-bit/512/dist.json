{
    "type": "multi_dim_distribution",
    "name": "Combine([MostSignificantBits({p},5,0,True),MostSignificantBits({q},5,0,True),All([Equal([LeastSignificantBits({p},1,1),Constant(1)]),Equal([LeastSignificantBits({q},1,1),Constant(1)])]),Min([ModularFingerprintSpecial({p}),ModularFingerprintSpecial({q})]),ROCAFingerprint({n},True)])",
    "counts": {
        "(30, 27, False, 251, False)": 17099,
        "(31, 30, True, 17863, False)": 2737,
        "(28, 27, False, 17863, False)": 8311,
        "(27, 25, True, 251, False)": 5699,
        "(30, 25, False, 251, False)": 17271,
        "(28, 24, False, 251, False)": 17298,
        "(28, 26, False, 251, False)": 17073,
        "(31, 29, False, 17863, False)": 8358,
        "(26, 25, False, 251, False)": 17317,
        "(31, 31, False, 251, False)": 8648,
        "(29, 26, True, 251, False)": 5766,
        "(28, 25, True, 251, False)": 5747,
        "(29, 27, False, 17863, False)": 8403,
        "(27, 25, False, 251, False)": 17034,
        "(25, 24, True, 251, False)": 5858,
        "(30, 27, False, 17863, False)": 8420,
        "(31, 26, False, 251, False)": 17037,
        "(28, 27, False, 251, False)": 17127,
        "(29, 24, False, 251, False)": 17133,
        "(25, 24, False, 251, False)": 17454,
        "(28, 24, False, 17863, False)": 8527,
        "(31, 24, True, 251, False)": 5705,
        "(29, 27, True, 251, False)": 5713,
        "(31, 25, True, 251, False)": 5883,
        "(28, 25, False, 251, False)": 17217,
        "(31, 27, False, 17863, False)": 8253,
        "(29, 27, False, 251, False)": 17206,
        "(26, 26, False, 251, False)": 8728,
        "(31, 27, False, 251, False)": 17266,
        "(28, 28, True, 17863, False)": 1359,
        "(24, 24, False, 251, False)": 8787,
        "(27, 27, True, 251, False)": 2960,
        "(28, 25, True, 17863, False)": 2696,
        "(27, 26, False, 251, False)": 17118,
        "(26, 24, True, 251, False)": 5718,
        "(30, 27, True, 251, False)": 5679,
        "(31, 28, False, 17863, False)": 8243,
        "(27, 27, False, 251, False)": 8622,
        "(29, 26, False, 251, False)": 17105,
        "(31, 30, False, 251, False)": 17180,
        "(31, 28, False, 251, False)": 17311,
        "(29, 28, False, 17863, False)": 8349,
        "(30, 24, False, 251, False)": 17214,
        "(30, 28, False, 251, False)": 17128,
        "(30, 29, False, 17863, False)": 8380,
        "(31, 31, True, 17863, False)": 1390,
        "(27, 26, False, 17863, False)": 8361,
        "(31, 27, True, 251, False)": 5755,
        "(29, 25, False, 251, False)": 17183,
        "(31, 25, False, 251, False)": 17113,
        "(25, 24, False, 17863, False)": 8361,
        "(31, 30, True, 251, False)": 5803,
        "(29, 28, False, 251, False)": 17147,
        "(29, 25, True, 251, False)": 5697,
        "(29, 27, True, 17863, False)": 2758,
        "(30, 28, False, 17863, False)": 8364,
        "(28, 26, True, 17863, False)": 2789,
        "(30, 26, False, 17863, False)": 8361,
        "(30, 25, True, 251, False)": 5766,
        "(30, 24, True, 251, False)": 5490,
        "(25, 25, True, 251, False)": 2883,
        "(31, 24, False, 251, False)": 17077,
        "(29, 25, True, 17863, False)": 2787,
        "(31, 27, True, 17863, False)": 2758,
        "(25, 24, True, 17863, False)": 2794,
        "(30, 30, False, 17863, False)": 4129,
        "(30, 28, True, 17863, False)": 2858,
        "(27, 27, False, 17863, False)": 4224,
        "(31, 30, False, 17863, False)": 8202,
        "(30, 26, False, 251, False)": 17429,
        "(29, 24, False, 17863, False)": 8293,
        "(31, 29, True, 17863, False)": 2668,
        "(26, 24, False, 17863, False)": 8396,
        "(25, 25, False, 251, False)": 8617,
        "(28, 24, True, 17863, False)": 2762,
        "(27, 24, True, 251, False)": 5641,
        "(30, 30, False, 251, False)": 8627,
        "(30, 26, True, 17863, False)": 2848,
        "(26, 25, False, 17863, False)": 8351,
        "(27, 26, True, 251, False)": 5817,
        "(26, 24, False, 251, False)": 17373,
        "(31, 29, True, 251, False)": 5721,
        "(30, 26, True, 251, False)": 5760,
        "(31, 29, False, 251, False)": 16926,
        "(28, 28, False, 251, False)": 8617,
        "(31, 25, False, 17863, False)": 8434,
        "(31, 26, True, 251, False)": 5745,
        "(31, 26, False, 17863, False)": 8479,
        "(30, 25, False, 17863, False)": 8306,
        "(26, 26, True, 251, False)": 2851,
        "(29, 24, True, 17863, False)": 2837,
        "(30, 29, True, 251, False)": 5816,
        "(24, 24, False, 17863, False)": 4162,
        "(31, 28, True, 251, False)": 5790,
        "(29, 28, True, 251, False)": 5780,
        "(26, 25, True, 251, False)": 5737,
        "(26, 26, False, 17863, False)": 4160,
        "(25, 25, False, 17863, False)": 4175,
        "(28, 28, True, 251, False)": 2843,
        "(27, 24, False, 251, False)": 17109,
        "(29, 26, False, 17863, False)": 8520,
        "(28, 27, True, 251, False)": 5993,
        "(30, 29, True, 17863, False)": 2724,
        "(28, 26, True, 251, False)": 5857,
        "(31, 24, False, 17863, False)": 8281,
        "(28, 24, True, 251, False)": 5643,
        "(29, 29, False, 251, False)": 8732,
        "(31, 25, True, 17863, False)": 2704,
        "(30, 25, True, 17863, False)": 2755,
        "(27, 24, False, 17863, False)": 8353,
        "(24, 24, True, 251, False)": 2876,
        "(29, 29, False, 17863, False)": 4127,
        "(27, 26, True, 17863, False)": 2831,
        "(31, 31, False, 17863, False)": 4122,
        "(28, 26, False, 17863, False)": 8337,
        "(27, 25, False, 17863, False)": 8233,
        "(31, 24, True, 17863, False)": 2767,
        "(31, 31, True, 251, False)": 2799,
        "(29, 24, True, 251, False)": 5766,
        "(30, 24, False, 17863, False)": 8301,
        "(28, 28, False, 17863, False)": 4067,
        "(30, 29, False, 251, False)": 17149,
        "(30, 24, True, 17863, False)": 2884,
        "(29, 26, True, 17863, False)": 2750,
        "(29, 28, True, 17863, False)": 2631,
        "(24, 24, True, 17863, False)": 1425,
        "(28, 25, False, 17863, False)": 8286,
        "(29, 29, True, 17863, False)": 1400,
        "(29, 25, False, 17863, False)": 8227,
        "(28, 27, True, 17863, False)": 2793,
        "(26, 25, True, 17863, False)": 2758,
        "(29, 29, True, 251, False)": 2865,
        "(31, 28, True, 17863, False)": 2691,
        "(30, 27, True, 17863, False)": 2760,
        "(30, 28, True, 251, False)": 5698,
        "(31, 26, True, 17863, False)": 2754,
        "(27, 27, True, 17863, False)": 1432,
        "(27, 24, True, 17863, False)": 2825,
        "(26, 26, True, 17863, False)": 1417,
        "(26, 24, True, 17863, False)": 2767,
        "(30, 30, True, 251, False)": 2894,
        "(27, 25, True, 17863, False)": 2708,
        "(25, 25, True, 17863, False)": 1389,
        "(30, 30, True, 17863, False)": 1452
    },
    "eval": "all"
}