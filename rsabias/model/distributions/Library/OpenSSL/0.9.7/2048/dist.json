{
    "type": "multi_dim_distribution",
    "name": "Combine([MostSignificantBits({p},5,0,True),MostSignificantBits({q},5,0,True),All([Equal([LeastSignificantBits({p},1,1),Constant(1)]),Equal([LeastSignificantBits({q},1,1),Constant(1)])]),Min([ModularFingerprintSpecial({p}),ModularFingerprintSpecial({q})]),ROCAFingerprint({n},True)])",
    "counts": {
        "(29, 24, True, 17863, False)": 757,
        "(31, 31, False, 17863, False)": 1227,
        "(29, 29, False, 17863, False)": 1197,
        "(28, 27, True, 17863, False)": 780,
        "(26, 24, False, 17863, False)": 2311,
        "(26, 25, False, 17863, False)": 2360,
        "(30, 25, True, 17863, False)": 777,
        "(29, 28, True, 17863, False)": 745,
        "(31, 30, False, 17863, False)": 2272,
        "(31, 26, True, 17863, False)": 747,
        "(27, 26, False, 17863, False)": 2301,
        "(29, 26, False, 17863, False)": 2421,
        "(28, 25, False, 17863, False)": 2385,
        "(30, 26, False, 17863, False)": 2319,
        "(29, 28, False, 17863, False)": 2305,
        "(25, 25, False, 17863, False)": 1239,
        "(31, 28, True, 17863, False)": 789,
        "(31, 24, False, 17863, False)": 2370,
        "(29, 24, False, 17863, False)": 2302,
        "(30, 29, False, 17863, False)": 2423,
        "(31, 29, False, 17863, False)": 2369,
        "(30, 24, False, 17863, False)": 2279,
        "(28, 24, False, 17863, False)": 2308,
        "(31, 27, True, 17863, False)": 779,
        "(27, 24, False, 17863, False)": 2309,
        "(30, 24, True, 17863, False)": 770,
        "(25, 24, False, 17863, False)": 2413,
        "(30, 25, False, 17863, False)": 2401,
        "(31, 27, False, 17863, False)": 2352,
        "(28, 27, False, 17863, False)": 2366,
        "(27, 25, True, 17863, False)": 797,
        "(29, 27, False, 17863, False)": 2275,
        "(24, 24, False, 17863, False)": 1124,
        "(27, 27, False, 17863, False)": 1188,
        "(31, 29, True, 17863, False)": 796,
        "(31, 25, False, 17863, False)": 2380,
        "(30, 28, False, 17863, False)": 2381,
        "(26, 24, True, 17863, False)": 792,
        "(29, 25, False, 17863, False)": 2443,
        "(26, 26, False, 17863, False)": 1114,
        "(27, 24, True, 17863, False)": 767,
        "(31, 28, False, 17863, False)": 2329,
        "(31, 24, True, 17863, False)": 769,
        "(30, 26, True, 17863, False)": 829,
        "(26, 26, True, 17863, False)": 394,
        "(30, 27, False, 17863, False)": 2366,
        "(28, 26, False, 17863, False)": 2304,
        "(28, 25, True, 17863, False)": 815,
        "(27, 26, True, 17863, False)": 757,
        "(29, 26, True, 17863, False)": 773,
        "(28, 26, True, 17863, False)": 803,
        "(28, 28, False, 17863, False)": 1154,
        "(30, 27, True, 17863, False)": 733,
        "(25, 24, True, 17863, False)": 772,
        "(27, 25, False, 17863, False)": 2303,
        "(30, 29, True, 17863, False)": 792,
        "(31, 26, False, 17863, False)": 2328,
        "(26, 25, True, 17863, False)": 720,
        "(29, 27, True, 17863, False)": 824,
        "(29, 29, True, 17863, False)": 404,
        "(27, 27, True, 17863, False)": 374,
        "(31, 25, True, 17863, False)": 782,
        "(28, 24, True, 17863, False)": 795,
        "(31, 30, True, 17863, False)": 752,
        "(30, 30, False, 17863, False)": 1144,
        "(30, 28, True, 17863, False)": 820,
        "(29, 25, True, 17863, False)": 805,
        "(24, 24, True, 17863, False)": 387,
        "(28, 28, True, 17863, False)": 390,
        "(31, 31, True, 17863, False)": 396,
        "(25, 25, True, 17863, False)": 389,
        "(30, 30, True, 17863, False)": 367
    },
    "eval": "all"
}