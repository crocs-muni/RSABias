{
    "type": "multi_dim_distribution",
    "name": "Combine([MostSignificantBits({p},5,0,True),MostSignificantBits({q},5,0,True),All([Equal([LeastSignificantBits({p},1,1),Constant(1)]),Equal([LeastSignificantBits({q},1,1),Constant(1)])]),Min([ModularFingerprintSpecial({p}),ModularFingerprintSpecial({q})]),ROCAFingerprint({n},True)])",
    "counts": {
        "(29, 29, True, 1, False)": 1839,
        "(26, 25, True, 1, False)": 3859,
        "(30, 29, True, 1, False)": 3781,
        "(31, 26, True, 1, False)": 3732,
        "(31, 25, True, 1, False)": 3764,
        "(25, 25, True, 5, False)": 255,
        "(31, 29, True, 1, False)": 3690,
        "(28, 26, True, 1, False)": 3738,
        "(29, 24, True, 5, False)": 565,
        "(30, 24, True, 1, False)": 3855,
        "(27, 26, True, 1, False)": 3678,
        "(31, 28, True, 1, False)": 3761,
        "(29, 27, True, 1, False)": 3848,
        "(29, 28, True, 1, False)": 3714,
        "(29, 25, True, 1, False)": 3812,
        "(31, 28, True, 17863, False)": 34,
        "(30, 28, True, 251, False)": 57,
        "(28, 25, True, 1, False)": 3764,
        "(26, 26, True, 1, False)": 1917,
        "(27, 25, True, 1, False)": 3700,
        "(31, 30, True, 1, False)": 3754,
        "(29, 24, True, 1, False)": 3821,
        "(30, 25, True, 1, False)": 3783,
        "(30, 27, True, 251, False)": 50,
        "(30, 26, True, 1, False)": 3808,
        "(28, 24, True, 1, False)": 3787,
        "(28, 28, True, 1, False)": 1817,
        "(28, 27, True, 1, False)": 3775,
        "(30, 30, True, 5, False)": 254,
        "(30, 29, True, 5, False)": 533,
        "(27, 24, True, 1, False)": 3878,
        "(25, 25, True, 1, False)": 1851,
        "(28, 25, True, 5, False)": 537,
        "(31, 24, True, 1, False)": 3813,
        "(29, 28, True, 5, False)": 522,
        "(30, 26, True, 5, False)": 574,
        "(31, 27, True, 1, False)": 3756,
        "(30, 27, True, 1, False)": 3746,
        "(30, 28, True, 1, False)": 3604,
        "(28, 24, True, 5, False)": 597,
        "(29, 26, True, 1, False)": 3679,
        "(31, 31, True, 1, False)": 1904,
        "(24, 24, True, 1, False)": 1814,
        "(31, 28, True, 5, False)": 511,
        "(26, 24, True, 1, False)": 3755,
        "(29, 29, True, 251, False)": 23,
        "(26, 25, True, 251, False)": 48,
        "(31, 26, True, 5, False)": 546,
        "(28, 26, True, 5, False)": 560,
        "(25, 24, True, 1, False)": 3715,
        "(28, 27, True, 5, False)": 521,
        "(29, 29, True, 5, False)": 253,
        "(27, 27, True, 1, False)": 1879,
        "(31, 29, True, 5, False)": 589,
        "(25, 24, True, 5, False)": 561,
        "(26, 24, True, 5, False)": 539,
        "(31, 24, True, 17863, False)": 31,
        "(30, 28, True, 5, False)": 504,
        "(31, 29, True, 17863, False)": 28,
        "(27, 25, True, 251, False)": 49,
        "(26, 25, True, 5, False)": 530,
        "(29, 27, True, 5, False)": 546,
        "(30, 25, True, 5, False)": 521,
        "(27, 24, True, 251, False)": 53,
        "(26, 26, True, 251, False)": 19,
        "(27, 24, True, 5, False)": 520,
        "(30, 27, True, 5, False)": 537,
        "(31, 24, True, 5, False)": 540,
        "(31, 31, True, 5, False)": 283,
        "(30, 25, True, 251, False)": 40,
        "(31, 26, True, 17863, False)": 23,
        "(30, 30, True, 1, False)": 1954,
        "(30, 24, True, 17863, False)": 28,
        "(24, 24, True, 5, False)": 268,
        "(29, 26, True, 5, False)": 508,
        "(27, 25, True, 5, False)": 505,
        "(27, 26, True, 251, False)": 37,
        "(31, 30, True, 5, False)": 567,
        "(31, 25, True, 17863, False)": 24,
        "(28, 28, True, 5, False)": 284,
        "(30, 24, True, 5, False)": 554,
        "(27, 26, True, 5, False)": 514,
        "(25, 24, True, 251, False)": 46,
        "(29, 27, True, 251, False)": 53,
        "(26, 26, True, 5, False)": 281,
        "(31, 27, True, 5, False)": 566,
        "(25, 25, True, 251, False)": 27,
        "(28, 27, True, 17863, False)": 32,
        "(31, 25, True, 5, False)": 486,
        "(29, 25, True, 17863, False)": 25,
        "(31, 27, True, 251, False)": 48,
        "(29, 25, True, 5, False)": 535,
        "(28, 27, True, 251, False)": 61,
        "(29, 28, True, 251, False)": 52,
        "(29, 25, True, 251, False)": 56,
        "(28, 28, True, 251, False)": 33,
        "(28, 26, True, 251, False)": 44,
        "(27, 27, True, 5, False)": 264,
        "(31, 28, True, 251, False)": 60,
        "(31, 29, True, 251, False)": 44,
        "(28, 25, True, 251, False)": 54,
        "(26, 25, True, 17863, False)": 31,
        "(31, 24, True, 251, False)": 43,
        "(27, 26, True, 17863, False)": 19,
        "(25, 24, True, 17863, False)": 26,
        "(30, 29, True, 251, False)": 46,
        "(29, 27, True, 17863, False)": 22,
        "(31, 31, True, 17863, False)": 19,
        "(27, 25, True, 17863, False)": 27,
        "(29, 26, True, 17863, False)": 18,
        "(31, 26, True, 251, False)": 57,
        "(31, 25, True, 251, False)": 56,
        "(29, 26, True, 251, False)": 54,
        "(30, 26, True, 17863, False)": 31,
        "(29, 24, True, 251, False)": 50,
        "(26, 24, True, 251, False)": 63,
        "(27, 24, True, 17863, False)": 21,
        "(31, 31, True, 251, False)": 31,
        "(30, 24, True, 251, False)": 42,
        "(27, 27, True, 17863, False)": 11,
        "(31, 30, True, 17863, False)": 28,
        "(30, 27, True, 17863, False)": 23,
        "(29, 28, True, 17863, False)": 21,
        "(28, 24, True, 251, False)": 42,
        "(31, 27, True, 17863, False)": 21,
        "(28, 26, True, 17863, False)": 31,
        "(30, 29, True, 17863, False)": 28,
        "(28, 25, True, 17863, False)": 26,
        "(30, 30, True, 251, False)": 26,
        "(24, 24, True, 17863, False)": 8,
        "(27, 27, True, 251, False)": 31,
        "(30, 26, True, 251, False)": 58,
        "(30, 25, True, 17863, False)": 24,
        "(30, 30, True, 17863, False)": 10,
        "(30, 28, True, 17863, False)": 23,
        "(28, 24, True, 17863, False)": 27,
        "(29, 29, True, 17863, False)": 14,
        "(31, 30, True, 251, False)": 36,
        "(25, 25, True, 17863, False)": 9,
        "(26, 24, True, 17863, False)": 27,
        "(24, 24, True, 251, False)": 26,
        "(29, 24, True, 17863, False)": 19,
        "(26, 26, True, 17863, False)": 15,
        "(28, 28, True, 17863, False)": 6
    },
    "eval": "all"
}