{
    "type": "multi_dim_distribution",
    "name": "Combine([MostSignificantBits({p},5,0,True),MostSignificantBits({q},5,0,True),All([Equal([LeastSignificantBits({p},1,1),Constant(1)]),Equal([LeastSignificantBits({q},1,1),Constant(1)])]),Min([ModularFingerprintSpecial({p}),ModularFingerprintSpecial({q})]),ROCAFingerprint({n},True)])",
    "counts": {
        "(29, 27, True, 1, False)": 3807,
        "(31, 30, True, 1, False)": 3890,
        "(31, 26, True, 1, False)": 3797,
        "(28, 26, True, 1, False)": 3814,
        "(29, 27, True, 5, False)": 541,
        "(30, 29, True, 1, False)": 3882,
        "(28, 25, True, 1, False)": 3833,
        "(31, 28, True, 1, False)": 3849,
        "(30, 26, True, 1, False)": 3820,
        "(30, 27, True, 1, False)": 3771,
        "(27, 24, True, 1, False)": 3832,
        "(27, 25, True, 1, False)": 3933,
        "(30, 24, True, 5, False)": 550,
        "(31, 28, True, 5, False)": 502,
        "(26, 26, True, 1, False)": 1935,
        "(29, 28, True, 1, False)": 3743,
        "(25, 24, True, 1, False)": 3932,
        "(30, 28, True, 1, False)": 3870,
        "(27, 26, True, 5, False)": 589,
        "(30, 24, True, 1, False)": 3880,
        "(27, 26, True, 1, False)": 3900,
        "(30, 25, True, 1, False)": 3910,
        "(28, 24, True, 1, False)": 3915,
        "(26, 24, True, 1, False)": 3852,
        "(31, 27, True, 1, False)": 3725,
        "(29, 26, True, 1, False)": 3839,
        "(27, 27, True, 1, False)": 1960,
        "(25, 25, True, 1, False)": 1878,
        "(30, 26, True, 5, False)": 527,
        "(29, 26, True, 5, False)": 521,
        "(26, 25, True, 1, False)": 3836,
        "(29, 29, True, 1, False)": 1832,
        "(29, 25, True, 1, False)": 3838,
        "(31, 25, True, 1, False)": 3778,
        "(30, 30, True, 1, False)": 1914,
        "(31, 27, True, 5, False)": 571,
        "(29, 25, True, 251, False)": 54,
        "(28, 27, True, 1, False)": 3893,
        "(24, 24, True, 1, False)": 1974,
        "(31, 29, True, 1, False)": 3852,
        "(31, 25, True, 5, False)": 520,
        "(29, 28, True, 5, False)": 525,
        "(31, 24, True, 1, False)": 3677,
        "(27, 24, True, 5, False)": 564,
        "(29, 24, True, 1, False)": 3872,
        "(26, 25, True, 5, False)": 555,
        "(30, 28, True, 5, False)": 557,
        "(28, 28, True, 1, False)": 1919,
        "(28, 26, True, 5, False)": 563,
        "(25, 25, True, 5, False)": 284,
        "(31, 31, True, 1, False)": 1929,
        "(30, 30, True, 5, False)": 265,
        "(25, 24, True, 5, False)": 543,
        "(30, 27, True, 5, False)": 525,
        "(26, 26, True, 5, False)": 275,
        "(27, 25, True, 5, False)": 513,
        "(31, 29, True, 5, False)": 579,
        "(29, 29, True, 5, False)": 301,
        "(29, 25, True, 5, False)": 531,
        "(31, 31, True, 5, False)": 285,
        "(31, 26, True, 5, False)": 526,
        "(29, 24, True, 5, False)": 576,
        "(25, 24, True, 251, False)": 64,
        "(24, 24, True, 5, False)": 270,
        "(28, 24, True, 5, False)": 518,
        "(31, 26, True, 17863, False)": 26,
        "(25, 25, True, 251, False)": 20,
        "(30, 24, True, 17863, False)": 23,
        "(28, 25, True, 5, False)": 553,
        "(28, 28, True, 5, False)": 285,
        "(26, 24, True, 5, False)": 533,
        "(28, 27, True, 5, False)": 533,
        "(31, 26, True, 251, False)": 49,
        "(27, 26, True, 17863, False)": 22,
        "(30, 25, True, 5, False)": 519,
        "(30, 27, True, 17863, False)": 26,
        "(31, 30, True, 5, False)": 565,
        "(29, 27, True, 17863, False)": 28,
        "(31, 24, True, 5, False)": 568,
        "(27, 27, True, 5, False)": 283,
        "(30, 30, True, 251, False)": 28,
        "(31, 25, True, 251, False)": 57,
        "(27, 25, True, 251, False)": 54,
        "(28, 25, True, 251, False)": 60,
        "(30, 29, True, 5, False)": 525,
        "(29, 28, True, 251, False)": 51,
        "(29, 26, True, 251, False)": 59,
        "(28, 25, True, 17863, False)": 25,
        "(31, 28, True, 251, False)": 51,
        "(28, 28, True, 251, False)": 32,
        "(30, 29, True, 251, False)": 63,
        "(30, 24, True, 251, False)": 51,
        "(31, 29, True, 17863, False)": 26,
        "(29, 28, True, 17863, False)": 29,
        "(31, 24, True, 251, False)": 50,
        "(28, 27, True, 17863, False)": 28,
        "(30, 25, True, 251, False)": 51,
        "(28, 24, True, 251, False)": 62,
        "(29, 26, True, 17863, False)": 19,
        "(29, 27, True, 251, False)": 45,
        "(26, 26, True, 251, False)": 25,
        "(26, 24, True, 251, False)": 45,
        "(31, 28, True, 17863, False)": 20,
        "(28, 28, True, 17863, False)": 11,
        "(26, 24, True, 17863, False)": 25,
        "(31, 31, True, 251, False)": 25,
        "(31, 24, True, 17863, False)": 20,
        "(30, 29, True, 17863, False)": 17,
        "(26, 25, True, 251, False)": 53,
        "(31, 27, True, 251, False)": 45,
        "(30, 26, True, 251, False)": 56,
        "(27, 26, True, 251, False)": 44,
        "(30, 27, True, 251, False)": 50,
        "(24, 24, True, 251, False)": 32,
        "(30, 25, True, 17863, False)": 27,
        "(31, 29, True, 251, False)": 50,
        "(25, 25, True, 17863, False)": 15,
        "(30, 28, True, 251, False)": 53,
        "(29, 24, True, 251, False)": 51,
        "(24, 24, True, 17863, False)": 14,
        "(31, 30, True, 17863, False)": 33,
        "(31, 31, True, 17863, False)": 13,
        "(28, 26, True, 251, False)": 37,
        "(30, 28, True, 17863, False)": 24,
        "(31, 30, True, 251, False)": 44,
        "(27, 25, True, 17863, False)": 30,
        "(27, 27, True, 251, False)": 29,
        "(26, 26, True, 17863, False)": 10,
        "(28, 27, True, 251, False)": 50,
        "(30, 30, True, 17863, False)": 13,
        "(28, 24, True, 17863, False)": 30,
        "(31, 27, True, 17863, False)": 23,
        "(27, 24, True, 251, False)": 57,
        "(29, 24, True, 17863, False)": 22,
        "(29, 25, True, 17863, False)": 36,
        "(26, 25, True, 17863, False)": 21,
        "(25, 24, True, 17863, False)": 24,
        "(28, 26, True, 17863, False)": 20,
        "(30, 26, True, 17863, False)": 21,
        "(31, 25, True, 17863, False)": 25,
        "(29, 29, True, 251, False)": 18,
        "(27, 24, True, 17863, False)": 20,
        "(27, 27, True, 17863, False)": 10,
        "(29, 29, True, 17863, False)": 11
    },
    "eval": "all"
}